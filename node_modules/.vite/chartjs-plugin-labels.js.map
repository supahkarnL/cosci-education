{
  "version": 3,
  "sources": ["../chartjs-plugin-labels/src/chartjs-plugin-labels.js", "dep:chartjs-plugin-labels"],
  "sourcesContent": ["/**\n * [chartjs-plugin-labels]{@link https://github.com/emn178/chartjs-plugin-labels}\n *\n * @version 1.1.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2017-2018\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  if (typeof Chart === 'undefined') {\n    console.error('Can not find Chart object.');\n    return;\n  }\n\n  if (typeof Object.assign != 'function') {\n    Object.assign = function (target, varArgs) {\n      if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n      var to = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n        if (nextSource != null) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n\n  var SUPPORTED_TYPES = {};\n  ['pie', 'doughnut', 'polarArea', 'bar'].forEach(function (t) {\n    SUPPORTED_TYPES[t] = true;\n  });\n\n  function Label() {\n    this.renderToDataset = this.renderToDataset.bind(this);\n  }\n\n  Label.prototype.setup = function (chart, options) {\n    this.chart = chart;\n    this.ctx = chart.ctx;\n    this.args = {};\n    this.barTotal = {};\n    var chartOptions = chart.config.options;\n    this.options = Object.assign({\n      position: 'default',\n      precision: 0,\n      fontSize: chartOptions.defaultFontSize,\n      fontColor: chartOptions.defaultFontColor,\n      fontStyle: chartOptions.defaultFontStyle,\n      fontFamily: chartOptions.defaultFontFamily,\n      shadowOffsetX: 3,\n      shadowOffsetY: 3,\n      shadowColor: 'rgba(0,0,0,0.3)',\n      shadowBlur: 6,\n      images: [],\n      outsidePadding: 2,\n      textMargin: 2,\n      overlap: true\n    }, options);\n    if (chart.config.type === 'bar') {\n      this.options.position = 'default';\n      this.options.arc = false;\n      this.options.overlap = true;\n    }\n  };\n\n  Label.prototype.render = function () {\n    this.labelBounds = [];\n    this.chart.data.datasets.forEach(this.renderToDataset);\n  };\n\n  Label.prototype.renderToDataset = function (dataset, index) {\n    this.totalPercentage = 0;\n    this.total = null;\n    var arg = this.args[index];\n    arg.meta.data.forEach(function (element, index) {\n      this.renderToElement(dataset, arg, element, index);\n    }.bind(this));\n  };\n\n  Label.prototype.renderToElement = function (dataset, arg, element, index) {\n    if (!this.shouldRenderToElement(arg.meta, element)) {\n      return;\n    }\n    this.percentage = null;\n    var label = this.getLabel(dataset, element, index);\n    if (!label) {\n      return;\n    }\n    var ctx = this.ctx;\n    ctx.save();\n    ctx.font = Chart.helpers.fontString(this.options.fontSize, this.options.fontStyle, this.options.fontFamily);\n    var renderInfo = this.getRenderInfo(element, label);\n    if (!this.drawable(element, label, renderInfo)) {\n      ctx.restore();\n      return;\n    }\n    ctx.beginPath();\n    ctx.fillStyle = this.getFontColor(dataset, element, index);\n    this.renderLabel(label, renderInfo);\n    ctx.restore();\n  };\n\n  Label.prototype.renderLabel = function (label, renderInfo) {\n    return this.options.arc ? this.renderArcLabel(label, renderInfo) : this.renderBaseLabel(label, renderInfo);\n  };\n\n  Label.prototype.renderBaseLabel = function (label, position) {\n    var ctx = this.ctx;\n    if (typeof label === 'object') {\n      ctx.drawImage(label, position.x - label.width / 2, position.y - label.height / 2, label.width, label.height);\n    } else {\n      ctx.save();\n      ctx.textBaseline = 'top';\n      ctx.textAlign = 'center';\n\n      if (this.options.textShadow) {\n        ctx.shadowOffsetX = this.options.shadowOffsetX;\n        ctx.shadowOffsetY = this.options.shadowOffsetY;\n        ctx.shadowColor = this.options.shadowColor;\n        ctx.shadowBlur = this.options.shadowBlur;\n      }\n\n      var lines = label.split('\\n');\n      for (var i = 0; i < lines.length; i++) {\n        var y = position.y - this.options.fontSize / 2 * lines.length + this.options.fontSize * i;\n        ctx.fillText(lines[i], position.x, y);\n      }\n      ctx.restore();\n    }\n  };\n\n  Label.prototype.renderArcLabel = function (label, renderInfo) {\n    var ctx = this.ctx, radius = renderInfo.radius, view = renderInfo.view;\n    ctx.save();\n    ctx.translate(view.x, view.y);\n    if (typeof label === 'string') {\n      ctx.rotate(renderInfo.startAngle);\n      ctx.textBaseline = 'middle';\n      ctx.textAlign = 'left';\n      var lines = label.split('\\n'), max = 0, widths = [], offset = 0;\n      if (this.options.position === 'border') {\n        offset = (lines.length - 1) * this.options.fontSize / 2;\n      }\n      for (var j = 0; j < lines.length; ++j) {\n        var mertrics = ctx.measureText(lines[j]);\n        if (mertrics.width > max) {\n          max = mertrics.width;\n        }\n        widths.push(mertrics.width);\n      }\n      for (var j = 0; j < lines.length; ++j) {\n        var line = lines[j];\n        var y = (lines.length - 1 - j) * -this.options.fontSize + offset;\n        ctx.save();\n        var padding = (max - widths[j]) / 2;\n        ctx.rotate(padding / radius);\n        for (var i = 0; i < line.length; i++) {\n          var char = line.charAt(i);\n          mertrics = ctx.measureText(char);\n          ctx.save();\n          ctx.translate(0, -1 * radius);\n          ctx.fillText(char, 0, y);\n          ctx.restore();\n          ctx.rotate(mertrics.width / radius);\n        }\n        ctx.restore();\n      }\n    } else {\n      ctx.rotate((view.startAngle + Math.PI / 2 + renderInfo.endAngle) / 2);\n      ctx.translate(0, -1 * radius);\n      this.renderLabel(label, { x: 0, y: 0 });\n    }\n    ctx.restore();\n  };\n\n  Label.prototype.shouldRenderToElement = function (meta, element) {\n    return !meta.hidden && !element.hidden && (\n      this.options.showZero ||\n      this.chart.config.type === 'polarArea' ? element._view.outerRadius !== 0 : element._view.circumference !== 0\n    );\n  };\n\n  Label.prototype.getLabel = function (dataset, element, index) {\n    var label;\n    if (typeof this.options.render === 'function') {\n      label = this.options.render({\n        label: this.chart.config.data.labels[index],\n        value: dataset.data[index],\n        percentage: this.getPercentage(dataset, element, index),\n        dataset: dataset,\n        index: index\n      });\n    } else {\n      switch (this.options.render) {\n        case 'value':\n          label = dataset.data[index];\n          break;\n        case 'label':\n          label = this.chart.config.data.labels[index];\n          break;\n        case 'image':\n          label = this.options.images[index] ? this.loadImage(this.options.images[index]) : '';\n          break;\n        case 'percentage':\n        default:\n          label = this.getPercentage(dataset, element, index) + '%';\n          break;\n      }\n    }\n    if (typeof label === 'object') {\n      label = this.loadImage(label);\n    } else if (label !== null && label !== undefined) {\n      label = label.toString();\n    }\n    return label;\n  };\n\n  Label.prototype.getFontColor = function (dataset, element, index) {\n    var fontColor = this.options.fontColor;\n    if (typeof fontColor === 'function') {\n      fontColor = fontColor({\n        label: this.chart.config.data.labels[index],\n        value: dataset.data[index],\n        percentage: this.getPercentage(dataset, element, index),\n        backgroundColor: dataset.backgroundColor[index],\n        dataset: dataset,\n        index: index\n      });\n    } else if (typeof fontColor !== 'string') {\n      fontColor = fontColor[index] || this.chart.config.options.defaultFontColor;\n    }\n    return fontColor;\n  };\n\n  Label.prototype.getPercentage = function (dataset, element, index) {\n    if (this.percentage !== null) {\n      return this.percentage;\n    }\n    var percentage;\n    if (this.chart.config.type === 'polarArea') {\n      if (this.total === null) {\n        this.total = 0;\n        for (var i = 0;i < dataset.data.length; ++i) {\n          this.total += dataset.data[i];\n        }\n      }\n      percentage = dataset.data[index] / this.total * 100;\n    } else if (this.chart.config.type === 'bar') {\n      if (this.barTotal[index] === undefined) {\n        this.barTotal[index] = 0;\n        for (var i = 0;i < this.chart.data.datasets.length; ++i) {\n          this.barTotal[index] += this.chart.data.datasets[i].data[index];\n        }\n      }\n      percentage = dataset.data[index] / this.barTotal[index] * 100;\n    } else {\n      percentage = element._view.circumference / this.chart.config.options.circumference * 100;\n    }\n    percentage = parseFloat(percentage.toFixed(this.options.precision));\n    if (!this.options.showActualPercentages) {\n      if (this.chart.config.type === 'bar') {\n        this.totalPercentage = this.barTotalPercentage[index] || 0;\n      }\n      this.totalPercentage += percentage;\n      if (this.totalPercentage > 100) {\n        percentage -= this.totalPercentage - 100;\n        percentage = parseFloat(percentage.toFixed(this.options.precision));\n      }\n      if (this.chart.config.type === 'bar') {\n        this.barTotalPercentage[index] = this.totalPercentage\n      }\n    }\n    this.percentage = percentage;\n    return percentage;\n  };\n\n  Label.prototype.getRenderInfo = function (element, label) {\n    if (this.chart.config.type === 'bar') {\n      return this.getBarRenderInfo(element, label);\n    } else {\n      return this.options.arc ? this.getArcRenderInfo(element, label) : this.getBaseRenderInfo(element, label);\n    }\n  };\n\n  Label.prototype.getBaseRenderInfo = function (element, label) {\n    if (this.options.position === 'outside' || this.options.position === 'border') {\n      var renderInfo, rangeFromCentre,\n        view = element._view,\n        centreAngle = view.startAngle + (view.endAngle - view.startAngle) / 2,\n        innerRadius = view.outerRadius / 2;\n      if (this.options.position === 'border') {\n        rangeFromCentre = (view.outerRadius - innerRadius) / 2 + innerRadius;\n      } else if (this.options.position === 'outside') {\n        rangeFromCentre = (view.outerRadius - innerRadius) + innerRadius + this.options.textMargin;\n      }\n      renderInfo = {\n        x: view.x + (Math.cos(centreAngle) * rangeFromCentre),\n        y: view.y + (Math.sin(centreAngle) * rangeFromCentre)\n      };\n      if (this.options.position === 'outside') {\n        var offset = this.options.textMargin + this.measureLabel(label).width / 2;\n        renderInfo.x += renderInfo.x < view.x ? -offset : offset;\n      }\n      return renderInfo;\n    } else {\n      return element.tooltipPosition();\n    }\n  };\n\n  Label.prototype.getArcRenderInfo = function (element, label) {\n    var radius, view = element._view;\n    if (this.options.position === 'outside') {\n      radius = view.outerRadius + this.options.fontSize + this.options.textMargin;\n    } else if (this.options.position === 'border') {\n      radius = (view.outerRadius / 2 + view.outerRadius) / 2;\n    } else {\n      radius = (view.innerRadius + view.outerRadius) / 2;\n    }\n    var startAngle = view.startAngle, endAngle = view.endAngle;\n    var totalAngle = endAngle - startAngle;\n    startAngle += Math.PI / 2;\n    endAngle += Math.PI / 2;\n    var mertrics = this.measureLabel(label);\n    startAngle += (endAngle - (mertrics.width / radius + startAngle)) / 2;\n    return {\n      radius: radius,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      totalAngle: totalAngle,\n      view: view\n    }\n  };\n\n  Label.prototype.getBarRenderInfo = function (element, label) {\n    var renderInfo = element.tooltipPosition();\n    renderInfo.y -= this.measureLabel(label).height / 2 + this.options.textMargin;\n    return renderInfo;\n  };\n\n  Label.prototype.drawable = function (element, label, renderInfo) {\n    if (this.options.overlap) {\n      return true;\n    } else if (this.options.arc) {\n      return renderInfo.endAngle - renderInfo.startAngle <= renderInfo.totalAngle;\n    } else {\n      var mertrics = this.measureLabel(label),\n        left = renderInfo.x - mertrics.width / 2,\n        right = renderInfo.x + mertrics.width / 2,\n        top = renderInfo.y - mertrics.height / 2,\n        bottom = renderInfo.y + mertrics.height / 2;\n      if (this.options.renderInfo === 'outside') {\n        return this.outsideInRange(left, right, top, bottom);\n      } else {\n        return element.inRange(left, top) && element.inRange(left, bottom) &&\n          element.inRange(right, top) && element.inRange(right, bottom);\n      }\n    }\n  };\n\n  Label.prototype.outsideInRange = function (left, right, top, bottom) {\n    var labelBounds = this.labelBounds;\n    for (var i = 0;i < labelBounds.length;++i) {\n      var bound = labelBounds[i];\n      var potins = [\n        [left, top],\n        [left, bottom],\n        [right, top],\n        [right, bottom]\n      ];\n      for (var j = 0;j < potins.length;++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n        if (x >= bound.left && x <= bound.right && y >= bound.top && y <= bound.bottom) {\n          return false;\n        }\n      }\n      potins = [\n        [bound.left, bound.top],\n        [bound.left, bound.bottom],\n        [bound.right, bound.top],\n        [bound.right, bound.bottom]\n      ];\n      for (var j = 0;j < potins.length;++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n        if (x >= left && x <= right && y >= top && y <= bottom) {\n          return false;\n        }\n      }\n    }\n    labelBounds.push({\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom\n    });\n    return true;\n  };\n\n  Label.prototype.measureLabel = function (label) {\n    if (typeof label === 'object') {\n      return { width: label.width, height: label.height };\n    } else {\n      var width = 0;\n      var lines = label.split('\\n');\n      for (var i = 0; i < lines.length; ++i) {\n        var result = this.ctx.measureText(lines[i]);\n        if (result.width > width) {\n          width = result.width;\n        }\n      }\n      return { width: width, height: this.options.fontSize * lines.length };\n    }\n  };\n\n  Label.prototype.loadImage = function (obj) {\n    var image = new Image();\n    image.src = obj.src;\n    image.width = obj.width;\n    image.height = obj.height;\n    return image;\n  };\n\n  Chart.plugins.register({\n    id: 'labels',\n    beforeDatasetsUpdate: function (chart, options) {\n      if (!SUPPORTED_TYPES[chart.config.type]) {\n        return;\n      }\n      if (!Array.isArray(options)) {\n        options = [options];\n      }\n      var count = options.length;\n      if (!chart._labels || count !== chart._labels.length) {\n        chart._labels = options.map(function () {\n          return new Label();\n        });\n      }\n      var someOutside = false, maxPadding = 0;\n      for (var i = 0; i < count; ++i) {\n        var label = chart._labels[i];\n        label.setup(chart, options[i]);\n        if (label.options.position === 'outside') {\n          someOutside = true;\n          var padding = label.options.fontSize * 1.5 + label.options.outsidePadding;\n          if (padding > maxPadding) {\n            maxPadding = padding;\n          }\n        }\n      }\n      if (someOutside) {\n        chart.chartArea.top += maxPadding;\n        chart.chartArea.bottom -= maxPadding;\n      }\n    },\n    afterDatasetUpdate: function (chart, args, options) {\n      if (!SUPPORTED_TYPES[chart.config.type]) {\n        return;\n      }\n      chart._labels.forEach(function (label) {\n        label.args[args.index] = args;\n      });\n    },\n    beforeDraw: function (chart) {\n      if (!SUPPORTED_TYPES[chart.config.type]) {\n        return;\n      }\n      chart._labels.forEach(function (label) {\n        label.barTotalPercentage = {};\n      });\n    },\n    afterDatasetsDraw: function (chart) {\n      if (!SUPPORTED_TYPES[chart.config.type]) {\n        return;\n      }\n      chart._labels.forEach(function (label) {\n        label.render();\n      });\n    }\n  });\n})();\n", "export default require(\"./node_modules/chartjs-plugin-labels/src/chartjs-plugin-labels.js\");"],
  "mappings": "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",
  "names": []
}
