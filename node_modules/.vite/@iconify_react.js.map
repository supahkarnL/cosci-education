{
  "version": 3,
  "sources": ["../@iconify/react/dist/iconify.mjs"],
  "sourcesContent": ["import React from 'react';\n\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    const aliases = data.aliases;\n    if (aliases && aliases[name2] !== void 0) {\n      const item = aliases[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    const chars = data.chars;\n    if (!iteration && chars && chars[name2] !== void 0) {\n      return getIcon(chars[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\nconst optionalProperties = {\n  provider: \"string\",\n  aliases: \"object\",\n  not_found: \"object\"\n};\nfor (const prop in iconDefaults) {\n  optionalProperties[prop] = typeof iconDefaults[prop];\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  for (const prop in optionalProperties) {\n    if (obj[prop] !== void 0 && typeof obj[prop] !== optionalProperties[prop]) {\n      return null;\n    }\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchName) || typeof icon.body !== \"string\") {\n      return null;\n    }\n    for (const prop in iconDefaults) {\n      if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n        return null;\n      }\n    }\n  }\n  const aliases = data.aliases;\n  if (aliases) {\n    for (const name in aliases) {\n      const icon = aliases[name];\n      const parent = icon.parent;\n      if (!name.match(matchName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent]) {\n        return null;\n      }\n      for (const prop in iconDefaults) {\n        if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n          return null;\n        }\n      }\n    }\n  }\n  return data;\n}\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */ Object.create(null);\ntry {\n  const w = window || self;\n  if (w && w._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */ Object.create(null);\nconst pendingUpdates = /* @__PURE__ */ Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = /* @__PURE__ */ Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst cache = {};\n\nfunction emptyCallback() {\n}\nconst pendingIcons = /* @__PURE__ */ Object.create(null);\nconst iconsToLoad = /* @__PURE__ */ Object.create(null);\nconst loaderFlags = /* @__PURE__ */ Object.create(null);\nconst queueFlags = /* @__PURE__ */ Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nconst errorsCache = /* @__PURE__ */ Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */ Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {\n  }\n}\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : defaults;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: fullIcon(icon),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon,\n                    abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };\n"],
  "mappings": "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",
  "names": []
}
